{"version":3,"sources":["components/Auth/AuthForm.module.css","components/quotes/QuoteForm.module.css","components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/quotes/QuoteList.module.css","components/Layout/Layout.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","components/UI/Card.module.css","components/UI/LoadingSpinner.module.css","components/quotes/QuoteItem.module.css","components/quotes/HighlightedQuote.module.css","store/auth-slice.js","store/auth-action.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","components/UI/Card.js","components/UI/LoadingSpinner.js","components/quotes/QuoteForm.js","hooks/use-http.js","store/quote-action.js","pages/NewQuote.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","App.js","store/quote-slice.js","store/index.js","index.js"],"names":["module","exports","authSlice","createSlice","name","initialState","user","token","userId","error","loading","loggedIn","reducers","state","action","payload","logIn","authRedirectPath","path","logout","authActions","actions","checkAuthTimeout","expirationTime","dispatch","setTimeout","MainNavigation","userr","useDispatch","isLoggedIn","useSelector","auth","split","toUpperCase","className","classes","header","to","logo","onClick","localStorage","removeItem","Layout","props","main","children","ProfileForm","form","control","htmlFor","type","id","UserProfile","profile","AuthForm","emailInputRef","useRef","passwordInputRef","useState","isLogin","setIsLogin","setIsLoading","onSubmit","event","preventDefault","enteredEmail","current","value","enteredPassword","email","password","authData","returnSecureToken","url","axios","post","then","res","expirationDate","Date","getTime","data","expiresIn","setItem","idToken","localId","catch","err","message","placeholder","required","ref","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","Card","card","LoadingSpinner","spinner","QuoteForm","authorInputRef","textInputRef","enteredAuthor","enteredText","onAddQuote","author","text","date","toLocaleString","isLoading","rows","httpReducer","status","useHttp","requestFunction","startwithPending","useReducer","httpState","sendRequest","useCallback","requestData","quoteId","a","FIREBASE_DOMAIN","addQuote","quoteData","queryParams","fetch","method","body","JSON","stringify","headers","json","ok","Error","getAllQuotes","key","tranformedQuotes","push","getSingleQuote","quote","Newquote","history","useHistory","useEffect","QuoteItem","item","QuoteList","quotes","ascending","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","pathname","list","map","AllQuotes","loadedQuotes","style","color","length","alert","HighlightedQuote","QuoteDetail","useParams","App","getItem","exact","quoteSlice","delete","console","log","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c9da06d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1K9g_\",\"control\":\"AuthForm_control__1555b\",\"actions\":\"AuthForm_actions__3FmGh\",\"toggle\":\"AuthForm_toggle__3f0fI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__bn8wo\",\"loading\":\"QuoteForm_loading__CUF3u\",\"control\":\"QuoteForm_control__2lPMj\",\"actions\":\"QuoteForm_actions__3l5xt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2XW45\",\"control\":\"ProfileForm_control__1ctbv\",\"action\":\"ProfileForm_action__2wbql\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__21bwU\",\"logo\":\"MainNavigation_logo__2YZGx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__16U1a\",\"sorting\":\"QuoteList_sorting__KaBuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2BDkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2U6H6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__1tElO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__385jW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__MbGVF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3NphH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__yBiqc\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    user: null,\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    loggedIn: false,\r\n  },\r\n  reducers: {\r\n    error(state, action) {\r\n      state.loading = action.payload.loading;\r\n      state.error = action.payload.error;\r\n    },\r\n    logIn(state, action) {\r\n      state.token = action.payload.token;\r\n      state.userId = action.payload.userId;\r\n      state.loading = action.payload.loading;\r\n      state.authRedirectPath = action.payload.path;\r\n      state.loggedIn = action.payload.loggedIn;\r\n      state.user = action.payload.user;\r\n    },\r\n    logout(state, action) {\r\n      state.token = action.payload.token;\r\n      state.userId = action.payload.userId;\r\n      state.loggedIn = action.payload.loggedIn;\r\n      state.user = action.payload.user;\r\n    },\r\n  },\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default authSlice;\r\n","import { authActions } from \"./auth-slice\";\r\nimport axios from \"axios\";\r\n\r\nexport const logOutt = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return (dispatch) => {\r\n    dispatch(\r\n      authActions.logout({ token: null, userId: null, loggedIn: false })\r\n    );\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      // dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, isLogin) => {\r\n  return (dispatch) => {\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    dispatch(authActions.logIn({ loading: true }));\r\n    let url =\r\n      \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyAUzjT7FMXo0mtJ1ckAsE-auLn-0NJfe30\";\r\n    if (isLogin) {\r\n      url =\r\n        \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyAUzjT7FMXo0mtJ1ckAsE-auLn-0NJfe30\";\r\n    }\r\n    axios\r\n      .post(\r\n        // \"https://www.googleapis.com/identitytoolkit.googleapis.com/v1/accounts:signInWithCustomToken?key=AIzaSyB9AuRXYYyknl7VyWIaLr4UCtD29Qnkrhg\",\r\n        // \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyB9AuRXYYyknl7VyWIaLr4UCtD29Qnkrhg\",\r\n        url,\r\n        authData\r\n      )\r\n      .then((res) => {\r\n        // console.log(res);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + res.data.expiresIn * 1000\r\n        );\r\n        localStorage.setItem(\"token\", res.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", res.data.localId);\r\n        localStorage.setItem(\"email\", res.data.email);\r\n\r\n        dispatch(\r\n          authActions.logIn({\r\n            token: res.data.idToken,\r\n            userId: res.data.localId,\r\n            loading: false,\r\n            user: res.data.email,\r\n            path: \"/\",\r\n            loggedIn: true,\r\n          })\r\n        );\r\n        dispatch(checkAuthTimeout(res.data.expiresIn));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(authActions.error({ error: err.message, loading: false }));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      // dispatch(logout());\r\n      return;\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        // dispatch(logout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        const email = localStorage.getItem(\"email\");\r\n\r\n        dispatch(\r\n          authActions.logIn({\r\n            token: token,\r\n            userId: userId,\r\n            loggedIn: true,\r\n            user: email,\r\n          })\r\n        );\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./MainNavigation.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logOutt } from \"../../store/auth-action\";\n\nconst MainNavigation = () => {\n  // const authCtx = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector((state) => state.auth.loggedIn);\n  const user = useSelector((state) => state.auth.user);\n\n  // const token = useSelector((state) => state.auth.token);\n  let userr;\n  if (user !== null && isLoggedIn) {\n    userr = user.split(\"@\")[0].toUpperCase();\n  }\n\n  // const isLoggedIn = authCtx.isLoggedIn;\n\n  const logout = () => {\n    dispatch(logOutt());\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>{isLoggedIn ? userr : \"React Auth\"}</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/new-quote\">Add Quote</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/quotes\">Quotes</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logout}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from \"react\";\n\nimport MainNavigation from \"./MainNavigation\";\nimport classes from \"./Layout.module.css\";\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import classes from './ProfileForm.module.css';\n\nconst ProfileForm = () => {\n  return (\n    <form className={classes.form}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { auth } from \"../../store/auth-action\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.auth.loading);\n  const error = useSelector((state) => state.auth.error);\n\n  // const isLoggedIn = useSelector((state) => state.auth.loggedIn);\n  // const path = useSelector((state) => state.auth.path);\n\n  // const authCtx = useContext(AuthContext);\n  // const history = useHistory();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    setIsLoading(true);\n\n    dispatch(auth(enteredEmail, enteredPassword, isLogin));\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"example@ex.com\"\n            required\n            ref={emailInputRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n          {error ? error : null}\n        </div>\n        <div className={classes.actions}>\n          {!loading && <button>{isLogin ? \"Login\" : \"Create Account\"}</button>}\n          {loading && <p>Sending request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useRef } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { useSelector } from \"react-redux\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const token = useSelector((state) => state.auth.token);\n  const userId = useSelector((state) => state.auth.userId);\n  // const uId = () => {\n  //   return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n  //     (\n  //       c ^\n  //       (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n  //     ).toString(16)\n  //   );\n  // };\n\n  // console.log(uId());\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote(\n      {\n        author: enteredAuthor,\n        text: enteredText,\n        userId: userId,\n        date: new Date().toLocaleString(),\n      },\n      token\n    );\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor=\"author\">Author</label>\n          <input type=\"text\" id=\"author\" ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"text\">Text</label>\n          <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className=\"btn\">Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n","import { useReducer, useCallback } from \"react\";\r\n\r\nfunction httpReducer(state, action) {\r\n  if (action.type === \"SEND\") {\r\n    return { data: null, error: null, status: \"pending\" };\r\n  }\r\n  if (action.type === \"SUCCESS\") {\r\n    return { data: action.res, error: null, status: \"complete\" };\r\n  }\r\n  if (action.type === \"FAIL\") {\r\n    return { data: null, error: action.error.message, status: \"complete\" };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startwithPending = false) {\r\n  const [httpState, dispatch] = useReducer(httpReducer, {\r\n    status: startwithPending ? \"pending\" : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  const sendRequest = useCallback(\r\n    async function (requestData, token, userId, quoteId) {\r\n      dispatch({ type: \"SEND\" });\r\n      try {\r\n        const res = await requestFunction(requestData, token, userId, quoteId);\r\n        // console.log(res);\r\n        dispatch({ type: \"SUCCESS\", res });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: \"FAIL\",\r\n          error: error.message || \"something went wrong\",\r\n        });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...httpState,\r\n  };\r\n}\r\n\r\nexport default useHttp;\r\n","const FIREBASE_DOMAIN = \"https://quotes-bf578-default-rtdb.firebaseio.com/\";\r\n\r\nexport async function addQuote(quoteData, token) {\r\n  const queryParams = \"/quotes.json?auth=\" + token;\r\n  // console.log(\"to\", token);\r\n  // console.log(\"dt\", quoteData);\r\n\r\n  const res = await fetch(`${FIREBASE_DOMAIN}${queryParams}`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  const data = await res.json();\r\n  // console.log(data);\r\n  if (!res.ok) {\r\n    throw new Error(data.message) || \"could not create a quote\";\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function getAllQuotes(userId, token) {\r\n  // console.log(\"user\", userId);\r\n  // console.log(\"token\", token);\r\n\r\n  const queryParams =\r\n    \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n  const res = await fetch(`${FIREBASE_DOMAIN}/quotes.json${queryParams} `);\r\n  const data = await res.json();\r\n  if (!res.ok) {\r\n    throw new Error(data.message) || \"could not create a quote\";\r\n  }\r\n\r\n  const tranformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    tranformedQuotes.push({\r\n      id: key,\r\n      ...data[key],\r\n    });\r\n  }\r\n  // console.log(tranformedQuotes);\r\n  return tranformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(id, userId, token) {\r\n  const queryParams = \"?auth=\" + token;\r\n  const res = await fetch(\r\n    `${FIREBASE_DOMAIN}/quotes/${id}.json${queryParams} `\r\n  );\r\n  const data = await res.json();\r\n\r\n  if (!res.ok) {\r\n    throw new Error(res.message) || \"could not create a quote\";\r\n  }\r\n\r\n  const quote = {\r\n    id: id,\r\n    ...data,\r\n  };\r\n\r\n  return quote;\r\n}\r\n\r\n// export function deleteQuotes(userId, token, id) {\r\n//   return async (dispatch) => {\r\n//     console.log(id);\r\n//     const queryParams =\r\n//       \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n//     const fetchData = async () => {\r\n//       const res = await fetch(\r\n//         `${FIREBASE_DOMAIN}/quotes.json/${id}${queryParams}`,\r\n//         {\r\n//           method: \"DELETE\",\r\n//           header: {\r\n//             Accept: \"application/json\",\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       if (!res.ok) {\r\n//         throw new Error(res.message) || \"could not create a quote\";\r\n//       }\r\n//       const data = await res.json();\r\n\r\n//       const tranformedQuotes = [];\r\n\r\n//       for (const key in data) {\r\n//         tranformedQuotes.push({\r\n//           id: key,\r\n//           ...data[key],\r\n//         });\r\n//       }\r\n//       return tranformedQuotes;\r\n//     };\r\n//     try {\r\n//       const responseData = await fetchData();\r\n//       console.log(\"this is my data\", responseData);\r\n//       dispatch(quoteActions.delete({ quotes: responseData }));\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n// }\r\n","import QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../store/quote-action\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Newquote = () => {\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"complete\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData, token);\r\n  };\r\n\r\n  return <QuoteForm onAddQuote={addQuoteHandler} />;\r\n};\r\n\r\nexport default Newquote;\r\n","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  // console.log(isSortingAscending);\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../store/quote-action\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AllQuotes = () => {\r\n  const history = useHistory();\r\n  const userId = useSelector((state) => state.auth.userId);\r\n  const token = useSelector((state) => state.auth.token);\r\n  // const quotes = useSelector((state) => state.quotes.quotes);\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(userId, token);\r\n  }, [sendRequest, userId, token]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <h1 style={{ color: \"#38015c\" }}>Processing...</h1>\r\n      </div>\r\n    );\r\n  }\r\n  if (!loadedQuotes || loadedQuotes.length === 0) {\r\n    alert(\"List is empty.Please add some new Quotes.\");\r\n    history.push(\"/new-quote\");\r\n    return (\r\n      <div className=\"centered\">\r\n        <h1 style={{ color: \"#38015c\" }}>Empty</h1>\r\n      </div>\r\n    );\r\n  }\r\n  // console.log(loadedQuotes);\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport { Fragment, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../store/quote-action\";\r\n\r\nconst QuoteDetail = () => {\r\n  // const history = useHistory();\r\n  const params = useParams();\r\n  const { quoteId } = params;\r\n\r\n  const userId = useSelector((state) => state.auth.userId);\r\n  const token = useSelector((state) => state.auth.token);\r\n  // console.log(params);\r\n  const {\r\n    sendRequest,\r\n    data: loadedQuotes,\r\n    status,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId, userId, token);\r\n  }, [sendRequest, quoteId, userId, token]);\r\n\r\n  // console.log(loadedQuotes);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <h1 style={{ color: \"#008080\" }}>Processing...</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuotes.text} author={loadedQuotes.date} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport Newquote from \"./pages/NewQuote\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authCheckState } from \"./store/auth-action\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  dispatch(authCheckState());\n\n  const isLoggedIn = useSelector((state) => state.auth.loggedIn);\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/new-quote\" exact>\n          <Newquote />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          {isLoggedIn && <AllQuotes />}\n          {!isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        {!isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n        <Route path=\"/profile\">\n          {isLoggedIn && <UserProfile />}\n          {!isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst quoteSlice = createSlice({\r\n  name: \"quote\",\r\n  initialState: {\r\n    quotes: [],\r\n  },\r\n  reducers: {\r\n    delete(state, action) {\r\n      state.quotes = action.payload.quotes;\r\n      console.log(action.payload.quotes);\r\n    },\r\n  },\r\n});\r\n\r\nexport const quoteActions = quoteSlice.actions;\r\n\r\nexport default quoteSlice;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\n// import uiSlice from './ui-slice';\r\n\r\nimport authSlice from \"./auth-slice\";\r\nimport quoteSlice from \"./quote-slice\";\r\nconst store = configureStore({\r\n  reducer: { auth: authSlice.reducer, quotes: quoteSlice.reducer },\r\n});\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n// import { AuthContextProvider } from \"./store/auth-context\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}